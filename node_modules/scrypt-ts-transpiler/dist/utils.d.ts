import ts from 'typescript';
export { signTx, getPreimage } from 'scryptlib';
export declare function getBuiltInType(type: string): string;
export declare function number2hex(val: number | bigint): string;
export declare function hasModifier(node: ts.Node, ...kinds: Array<ts.Modifier['kind']>): boolean;
export declare function isNumberLiteralExpr(expr: ts.Node | undefined): boolean;
export declare function alterFileExt(filename: string, toExt: string, fromExt?: string): string;
export declare function findReturnStatement(node: ts.Node): ts.Node;
export declare function findInsertCodeSeparatorStatement(node: ts.Node): ts.Node;
export declare function findBuildChangeOutputExpression(node: ts.Node): ts.Node;
export declare function allowByteStringLiteral(node: ts.Node): boolean;
export declare function checkByteStringLiteral(node: ts.StringLiteral): void;
export declare function toBuildInsTypes(t: string): string | undefined;
export declare function sha1(s: string): string;

import { ByteString, SmartContract, PubKey, Sig, FixedArray } from 'scrypt-ts';
export interface Bid {
    furnisherKey: PubKey;
    plans: ByteString;
    bidAmount: bigint;
    bond: bigint;
    timeOfBid: bigint;
    timeRequired: bigint;
}
export declare class EscrowContract extends SmartContract {
    static readonly TYPE_BOUNTY: bigint;
    static readonly TYPE_BID: bigint;
    static readonly STATUS_INITIAL: bigint;
    static readonly STATUS_BID_ACCEPTED: bigint;
    static readonly STATUS_WORK_STARTED: bigint;
    static readonly STATUS_WORK_SUBMITTED: bigint;
    static readonly STATUS_RESOLVED: bigint;
    static readonly STATUS_DISPUTED_BY_SEEKER: bigint;
    static readonly STATUS_DISPUTED_BY_FURNISHER: bigint;
    static readonly FURNISHER_BONDING_MODE_FORBIDDEN: bigint;
    static readonly FURNISHER_BONDING_MODE_OPTIONAL: bigint;
    static readonly FURNISHER_BONDING_MODE_REQUIRED: bigint;
    static readonly FURNISHER_APPROVAL_MODE_SEEKER: bigint;
    static readonly FURNISHER_APPROVAL_MODE_SEEKER_OR_PLATFORM: bigint;
    static readonly FURNISHER_APPROVAL_MODE_PLATFORM: bigint;
    static readonly DELAY_UNIT_BLOCKS: bigint;
    static readonly DELAY_UNIT_SECONDS: bigint;
    static readonly BOUNTY_INCREASE_FORBIDDEN: bigint;
    static readonly BOUNTY_INCREASE_ALLOWED_BY_SEEKER: bigint;
    static readonly BOUNTY_INCREASE_ALLOWED_BY_PLATFORM: bigint;
    static readonly BOUNTY_INCREASE_ALLOWED_BY_SEEKER_OR_PLATFORM: bigint;
    static readonly BOUNTY_INCREASE_ALLOWED_BY_ANYONE: bigint;
    static readonly INCREASE_CUTOFF_BID_ACCEPTANCE: bigint;
    static readonly INCREASE_CUTOFF_START_OF_WORK: bigint;
    static readonly INCREASE_CUTOFF_SUBMISSION_OF_WORK: bigint;
    static readonly INCREASE_CUTOFF_ACCEPTANCE_OF_WORK: bigint;
    static readonly BID_NOT_YET_ACCEPTED: bigint;
    static readonly BID_ACCEPTED_BY_SEEKER: bigint;
    static readonly BID_ACCEPTED_BY_PLATFORM: bigint;
    minAllowableBid: bigint;
    escrowServiceFeeBasisPoints: bigint;
    platformAuthorizationRequired: bigint;
    escrowMustBeFullyDecisive: bigint;
    bountySolversNeedApproval: bigint;
    furnisherBondingMode: bigint;
    requiredBondAmount: bigint;
    maxWorkStartDelay: bigint;
    maxWorkApprovalDelay: bigint;
    delayUnit: bigint;
    workCompletionDeadline: bigint;
    approvalMode: bigint;
    contractType: bigint;
    contractSurvivesAdverseFurnisherDisputeResolution: bigint;
    bountyIncreaseAllowanceMode: bigint;
    bountyIncreaseCutoffPoint: bigint;
    bids: FixedArray<Bid, 4>;
    seekerKey: PubKey;
    platformKey: PubKey;
    acceptedBid: Bid;
    bidAcceptedBy: bigint;
    workCompletionTime: bigint;
    status: bigint;
    workDescription: ByteString;
    workCompletionDescription: ByteString;
    constructor(seekerKey: PubKey, platformKey: PubKey, escrowServiceFeeBasisPoints: bigint, platformAuthorizationRequired: bigint, workDescription: ByteString, workCompletionDeadline: bigint, minAllowableBid?: bigint, bountySolversNeedApproval?: bigint, escrowMustBeFullyDecisive?: bigint, furnisherBondingMode?: bigint, requiredBondAmount?: bigint, maxWorkStartDelay?: bigint, maxWorkApprovalDelay?: bigint, delayUnit?: bigint, approvalMode?: bigint, bountyIncreaseAllowanceMode?: bigint, bountyIncreaseCutoffPoint?: bigint, contractType?: bigint, contractSurvivesAdverseFurnisherDisputeResolution?: bigint, bids?: FixedArray<Bid, 4>);
    seekerCancelsBeforeAcceptOnChain(seekerSig: Sig): void;
    increaseBountyOnChain(mode: bigint, amount: bigint, sig: Sig): void;
    seekerExtendsWorkDeadlineOnChain(seekerSig: Sig, extension: bigint): void;
    seekerExtendsWorkDeadline(seekerSig: Sig, extension: bigint): void;
    furnisherPlacesBidOnChain(furnisherSig: Sig, bid: Bid, index: bigint): void;
    furnisherPlacesBid(furnisherSig: Sig, bid: Bid, index: bigint): void;
    acceptBidOnChain(mode: bigint, sig: Sig, index: bigint): void;
    acceptBid(mode: bigint, sig: Sig, index: bigint): void;
    withdrawBidAcceptanceOnChain(sig: Sig, index: bigint): void;
    withdrawBidAcceptance(sig: Sig, index: bigint): void;
    rejectBidOnChain(mode: bigint, sig: Sig, index: bigint): void;
    rejectBid(mode: bigint, sig: Sig, index: bigint): void;
    furnisherStartsWorkOnChain(furnisherSig: Sig): void;
    furnisherStartsWork(furnisherSig: Sig): void;
    furnisherStartsWorkWithPlatformAuthorizationOnChain(furnisherSig: Sig, platformSig: Sig): void;
    furnisherStartsWorkWithPlatformAuthorization(furnisherSig: Sig, platformSig: Sig): void;
    seekerRaisesDisputeOnChain(seekerSig: Sig): void;
    seekerRaisesDispute(seekerSig: Sig): void;
    furnisherRaisesDisputeOnChain(furnisherSig: Sig): void;
    furnisherRaisesDispute(furnisherSig: Sig): void;
    furnisherSubmitsWorkOnChain(furnisherSig: Sig, workCompletionDescription: ByteString, adHocBid: Bid): void;
    furnisherSubmitsWork(furnisherSig: Sig, workCompletionDescription: ByteString, adHocBid: Bid): void;
    seekerApprovesWorkOnChain(seekerSig: Sig): void;
    seekerApprovesWork(seekerSig: Sig): void;
    furnisherClaimsPaymentOnChain(furnisherSig: Sig): void;
    resolveDisputeOnChain(platformResolves: bigint, amountForSeeker: bigint, amountForFurnisher: bigint, otherOutputs: ByteString, platformSig: Sig, seekerSig: Sig, furnisherSig: Sig): void;
    private enforceProperTimeUnits;
}
//# sourceMappingURL=Escrow.d.ts.map
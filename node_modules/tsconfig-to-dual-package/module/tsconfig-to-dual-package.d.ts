export type TSConfigDualPackageOptions = {
    targetTsConfigFilePaths?: string[];
    cwd: string;
    debug?: boolean;
};
export declare const findNearestPackageJson: ({ cwd }: TSConfigDualPackageOptions) => Promise<{
    type?: "module" | "commonjs";
}>;
export declare const findTsConfig: ({ targetTsConfigFilePaths, cwd }: TSConfigDualPackageOptions) => Promise<string[]>;
export declare const createModuleTypePackage: ({ cwd, type, debug }: {
    cwd: string;
    type: "module" | "commonjs";
    debug: boolean;
}) => Promise<{
    type: "module" | "commonjs";
}>;
export declare const tsconfigToDualPackages: ({ targetTsConfigFilePaths, cwd, debug }: TSConfigDualPackageOptions) => Promise<void>;
//# sourceMappingURL=tsconfig-to-dual-package.d.ts.map